using System;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Logging;
using Newtonsoft.Json;
using VulnerabilityManagementService.Repository;

namespace VulnerabilityManagementService.Controllers
{
    [Authorize]
    [Route("api/[controller]")]
    [ApiController]
    public class VulnerabilityController : Controller
    {
        private readonly IMongoDbManager _mongoDbManager;
        private readonly ILogger<VulnerabilityController> _logger;

        public VulnerabilityController(IMongoDbManager mongoDbManager, ILogger<VulnerabilityController> logger)
        {
            _mongoDbManager = mongoDbManager;
            _logger = logger;
        }

        [HttpGet()]
        public IActionResult GetAllVulnarability(int listingId)
        {
            try
            {
                //var listings = _mongoDbManager.GetListingDetailById(listingId);
                //listings.Reviews = _mongoDbManager.GetReviewsForListing(listingId).Result;
                return Ok("ERA"/*JsonConvert.SerializeObject(listings)*/);
            }
            catch (Exception e)
            {
                _logger.LogError($"Exception thrown while getting list of listings: {e.Message}");
            }

            return BadRequest("Error getting all listings");
        }
    }
}